import { ApiService } from "./apiService";
const { Telegraf, Markup, Context } = require('telegraf');
require('dotenv').config()


const token = process.env.TOKEN!;

const bot = new Telegraf(process.env.TOKEN);

bot.start(async (ctx: any) => {
  await ctx.reply('–ü—Ä–∏–≤–µ—Ç, —è –ø–æ–≥–æ–¥–Ω—ã–π –±–æ—Ç, –∏ —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É', Markup.inlineKeyboard([
    Markup.button.callback('–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É?', 'yes')
  ]))

});

bot.action('yes', async (ctx: any) => {
  await ctx.answerCbQuery();
  await ctx.reply('–û—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏')
});

bot.on('text', async (ctx: any) => {
  const city = ctx.message.text
  const response = await ApiService.getCurrentWeather(city);
  const { location, current, forecast } = response.data;
  await ctx.reply('–í—ã–±—Ä–∞—Ç—å',  Markup.inlineKeyboard([
    Markup.button.callback('–ü–æ–≥–æ–¥–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', 'today'),
    Markup.button.callback('–ü–æ–≥–æ–¥–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞', 'tomorrow'),
    Markup.button.callback('–ü–æ–≥–æ–¥–∞ –Ω–∞ —Ç—Ä–∏ –¥–Ω—è', 'three')
  ]) )

  bot.action('today', async (ctx: any) => {
    await ctx.answerCbQuery();
    const {country, region, name, localtime} = location;
    const {temp_c, wind_kph, wind_dir, condition, pressure_mb, humidity} = current;
    await ctx.replyWithHTML(`<b>${country}\n${region}\n${name}\n ${localtime}</b>\n<b>${condition.text}</b>\n\n<b>üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${temp_c}&#8451;</b>\n<b>‚ÜóÔ∏è –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ ${wind_dir}</b>\n<b>üí® –°–∏–ª–∞ –≤–µ—Ç—Ä–∞ ${wind_kph} –ö–º/—á</b>\n<b>üïõ –ê—Ç–º. –¥–∞–≤–ª–µ–Ω–∏–µ ${pressure_mb} –º–º —Ä—Ç. —Å—Ç.; </b>\n<b>‚òÇÔ∏è –í–ª–∞–∂–Ω–æ—Å—Ç—å ${humidity}%</b> `)
  })
})


bot.launch().then(() => {
  console.log('Bot started!')
});